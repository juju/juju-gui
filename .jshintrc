{
    // The basis for this file was taken from:
    // https://github.com/oryband/dotfiles/blob/master/jshintrc
    // and then extensively modified.
    // Settings
    "passfail"      : false,  // Stop on first error.
    "maxerr"        : 100,    // Maximum errors before stopping.


    // Predefined globals that JSHint will ignore.
    "browser"       : true,   // Standard browser globals e.g. `window`, `document`.
    "node"          : true,
    "rhino"         : false,
    "couch"         : false,
    "wsh"           : false,   // Windows Scripting Host.
    "nonstandard"   : false,   // Define non-standard but widely adopted globals such as escape and unescape.
    "jquery"        : false,
    "prototypejs"   : false,
    "mootools"      : false,
    "dojo"          : false,
    "yui"           : true,

    "predef"        : [  // Extra globals.
        "after",
        "afterEach",
        "assert",
        "before",
        "beforeEach",
        "d3",
        "describe",
        "escape",
        "expect",
        "GlobalConfig",
        "jsyaml",
        "consoleManager",
        "it",
        "saveAs",
        "zip",
        "React"
    ],


    // Development.
    "debug"         : false,  // Allow debugger statements e.g. browser breakpoints.
    "devel"         : true,   // Allow development statements e.g. `console.log();`.


    // EcmaScript 5.
    "es5"           : false,   // Allow EcmaScript 5 syntax.
    "strict"        : true,  // Require `use strict` pragma in every file.
    "esnext"        : false, // Allow ES.next specific features such as `const` and `let`.
    "globalstrict"  : false,  // Allow global "use strict" (also enables 'strict').


    // The Good Parts.
    "asi"           : false,  // Tolerate Automatic Semicolon Insertion (no semicolons).
    "laxbreak"      : false,   // Tolerate unsafe line breaks e.g. `return [\n] x` without semicolons.
    "bitwise"       : true,   // Prohibit bitwise operators (&, |, ^, etc.).
    "boss"          : false,  // Tolerate assignments inside if, for & while. Usually conditions & loops are for comparison, not assignments.
    "curly"         : true,   // Require {} for every new block or scope.
    "eqeqeq"        : true,   // Require triple equals i.e. `===`.
    "eqnull"        : false,  // Tolerate use of `== null`.
    "evil"          : false,  // Tolerate use of `eval`.
    "expr"          : false,  // Tolerate `ExpressionStatement` as Programs.
    "forin"         : true,  // Tolerate `for in` loops without `hasOwnPrototype`.
    "immed"         : true,   // Require immediate invocations to be wrapped in parens e.g. `( function(){}() );`
    "latedef"       : true,   // Prohibit variable use before definition.
    "loopfunc"      : false,  // Allow functions to be defined within loops.
    "noarg"         : true,   // Prohibit use of `arguments.caller` and `arguments.callee`.
    "regexp"        : true,   // Prohibit `.` and `[^...]` in regular expressions.
    "regexdash"     : false,  // Tolerate unescaped last dash i.e. `[-...]`.
    "scripturl"     : false,   // Tolerate script-targeted URLs.
    "shadow"        : false,  // Allows re-define variables later in code e.g. `var x=1; x=2;`.
    "supernew"      : false,  // Tolerate `new function () { ... };` and `new Object;`.
    "undef"         : true,   // Require all non-global variables be declared before they are used.
    "iterator"      : false,    // Allow usage of __iterator__ property.
    "lastsemic"     : false,    // Tolerat missing semicolons when the it is omitted for the last statement in a one-line block.

    // Persone styling prefrences.
    "newcap"        : true,   // Require capitalization of all constructor functions e.g. `new F()`.
    "noempty"       : true,   // Prohibit use of empty blocks.
    "nonew"         : true,   // Prohibit use of constructors for side-effects.
    "nomen"         : false,   // Prohibit use of initial or trailing underbars in names.
    "onevar"        : false,  // Allow only one `var` statement per function.
    "plusplus"      : true,  // Prohibit use of `++` & `--`.
    "sub"           : false,  // Tolerate all forms of subscript notation besides dot notation e.g. `dict['key']` instead of `dict.key`.
    "trailing"      : true,   // Prohibit trailing whitespaces.
    "indent"        : false,  // This option enforces specific tab width for your code. ( 0 means off ).
    "funcscope"     : false,   // Tolerate declarations of variables inside of control structures while accessing them later from the outside.
    "quotmark"      : "single", // Require single quotes.
    "laxcomma"      : false,    // Suppress warnings about comma-first coding style.
    "multistr"      : true,    // Tolerate multi-line strings.
    "onecase"       : false,    // Tolerate switches with just one case.
    "proto"         : false,    // Tolerate __proto__ property. This property is deprecated.
    "smarttabs"     : false,    // Tolerate mixed tabs and spaces when the latter are used for alignmnent only.
    "validthis"     : false    // Tolerate strict violations when the code is running in strict mode and you use this in a non-constructor function.
}
