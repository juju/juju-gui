/* Mixins */
.animation (...) {
    -webkit-animation: @arguments;
    -moz-animation: @arguments;
    -ms-animation: @arguments;
    -o-animation: @arguments;
    animation: @arguments;
}
.animation-fill-mode (...) {
    -webkit-animation-fill-mode: @arguments;
    -moz-animation-fill-mode: @arguments;
    -ms-animation-fill-mode: @arguments;
    -o-animation-fill-mode: @arguments;
    animation-fill-mode: @arguments;
}
.transition (...) {
    -webkit-transition: @arguments;
    -moz-transition: @arguments;
    -ms-transition: @arguments;
    -o-transition: @arguments;
    transition: @arguments;
}
.create-border-radius(@radius) {
    -moz-border-radius: @radius;
    -webkit-border-radius: @radius;
    border-radius: @radius;
}
.create-box-shadow(@arguments) {
    -moz-box-shadow: @arguments;
    -webkit-box-shadow: @arguments;
    box-shadow: @arguments;
}
.create-linear-gradient(@gradient-start, @gradient-end) {
    background-image: -ms-linear-gradient(top, @gradient-start, @gradient-end);
    background-image: -webkit-gradient(linear, 0 0, 0 100%, from(@gradient-start), to(@gradient-end));
    background-image: -webkit-linear-gradient(top, @gradient-start, @gradient-end);
    background-image: -o-linear-gradient(top, @gradient-start, @gradient-end);
    background-image: -moz-linear-gradient(top, @gradient-start, @gradient-end);
    background-image: linear-gradient(top, @gradient-start, @gradient-end);
    background-repeat: repeat-x;
}
/*
 * Rotation transform.  Call with numerical value and units, e.g.
 * .rotate(-90deg);
 */
.rotate(@angle) {
    -webkit-transform: rotate(@angle);
    -moz-transform: rotate(@angle);
    -ms-transform: rotate(@angle);
    -o-transform: rotate(@angle);
    transform: rotate(@angle);
}
.border-box {
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
}
.button {
    .create-border-radius(@border-radius);
    .create-linear-gradient(@charm-panel-orange, #c03f11);
    color: #fff;
    text-decoration: none;
    display: inline-block;
    margin: 0;
    padding: 8px 14px;
    border: none;
    font-size: 14px;

    &:hover {
        background: @charm-panel-orange;
    }
    &.inverse {
        // Using a variable here because LESS strips commas in mixin args.
        @box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2);
        .create-box-shadow(@box-shadow);
        background:  #eee;
        border: none;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);

        &:hover {
            background: #eee;
        }
        &.orange {
            background: @charm-panel-orange;
        }
    }
}
.customize-scrollbar {
    ::-webkit-scrollbar {
        width: 10px;
    }
    ::-webkit-scrollbar-track {
        background-color: #fff;
    }
    ::-webkit-scrollbar-thumb {
        background-color: #bbb;
        border: 1px solid #a8a8a8;
    }
}
.sprite-hover {
    &:focus,
    &:hover {
        .sprite.hover {
            display: inline-block;
        }
        .sprite.normal {
            display: none;
        }
    }
    .sprite.hover {
        display: none;
    }
}
.display-flex {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
}
.flex-basis(@width) {
    -webkit-flex-basis: @width;
    -ms-flex-basis: @width;
    flex-basis: @width;
}
.flex-direction(@direction) {
    -webkit-flex-direction: @direction;
    -webkit-box-orient: vertical;
    -ms-flex-direction: @direction;
    flex-direction: @direction;
}
.flex(@grow) {
    -webkit-box-flex: @grow;
    -ms-flex: @grow;
    flex: @grow;
}
